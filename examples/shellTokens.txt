   1  function shellShort(array: int[], n: int): void {
          [0001, 0001] (0009,      RW_FN) {function}
          [0001, 0010] (0001, IDENTIFIER) {shellShort}
          [0001, 0020] (0003,     OP_PAR) {(}
          [0001, 0021] (0001, IDENTIFIER) {array}
          [0001, 0026] (0028,   SB_COLON) {:}
          [0001, 0028] (0010,     RW_INT) {int}
          [0001, 0031] (0007,     OP_BRA) {[}
          [0001, 0032] (0008,     CL_BRA) {]}
          [0001, 0033] (0030,   SB_COMMA) {,}
          [0001, 0035] (0001, IDENTIFIER) {n}
          [0001, 0036] (0028,   SB_COLON) {:}
          [0001, 0038] (0010,     RW_INT) {int}
          [0001, 0041] (0004,     CL_PAR) {)}
          [0001, 0042] (0028,   SB_COLON) {:}
          [0001, 0044] (0015,    RW_VOID) {void}
          [0001, 0049] (0005,    OP_CBRA) {{}
   2      var gap: int = n / 2;
          [0002, 0005] (0022,     RW_VAR) {var}
          [0002, 0009] (0001, IDENTIFIER) {gap}
          [0002, 0012] (0028,   SB_COLON) {:}
          [0002, 0014] (0010,     RW_INT) {int}
          [0002, 0018] (0031,    SB_ASGN) {=}
          [0002, 0020] (0001, IDENTIFIER) {n}
          [0002, 0022] (0035,    OPR_DIV) {/}
          [0002, 0024] (0045,     CT_INT) {2}
          [0002, 0025] (0029,  SB_SCOLON) {;}
   3  
   4      while gap > 0 {
          [0004, 0005] (0020,   RW_WHILE) {while}
          [0004, 0011] (0001, IDENTIFIER) {gap}
          [0004, 0015] (0041,     OPR_GT) {>}
          [0004, 0017] (0045,     CT_INT) {0}
          [0004, 0019] (0005,    OP_CBRA) {{}
   5          var i: int = gap;
          [0005, 0009] (0022,     RW_VAR) {var}
          [0005, 0013] (0001, IDENTIFIER) {i}
          [0005, 0014] (0028,   SB_COLON) {:}
          [0005, 0016] (0010,     RW_INT) {int}
          [0005, 0020] (0031,    SB_ASGN) {=}
          [0005, 0022] (0001, IDENTIFIER) {gap}
          [0005, 0025] (0029,  SB_SCOLON) {;}
   6          
   7          for i, 1, n {
          [0007, 0009] (0021,     RW_FOR) {for}
          [0007, 0013] (0001, IDENTIFIER) {i}
          [0007, 0014] (0030,   SB_COMMA) {,}
          [0007, 0016] (0045,     CT_INT) {1}
          [0007, 0017] (0030,   SB_COMMA) {,}
          [0007, 0019] (0001, IDENTIFIER) {n}
          [0007, 0021] (0005,    OP_CBRA) {{}
   8              var temp: int = array[i];
          [0008, 0013] (0022,     RW_VAR) {var}
          [0008, 0017] (0001, IDENTIFIER) {temp}
          [0008, 0021] (0028,   SB_COLON) {:}
          [0008, 0023] (0010,     RW_INT) {int}
          [0008, 0027] (0031,    SB_ASGN) {=}
          [0008, 0029] (0001, IDENTIFIER) {array}
          [0008, 0034] (0007,     OP_BRA) {[}
          [0008, 0035] (0001, IDENTIFIER) {i}
          [0008, 0036] (0008,     CL_BRA) {]}
          [0008, 0037] (0029,  SB_SCOLON) {;}
   9              var j: int = i;
          [0009, 0013] (0022,     RW_VAR) {var}
          [0009, 0017] (0001, IDENTIFIER) {j}
          [0009, 0018] (0028,   SB_COLON) {:}
          [0009, 0020] (0010,     RW_INT) {int}
          [0009, 0024] (0031,    SB_ASGN) {=}
          [0009, 0026] (0001, IDENTIFIER) {i}
          [0009, 0027] (0029,  SB_SCOLON) {;}
  10  
  11              while j >= gap and arr[j-gap] > temp {
          [0011, 0013] (0020,   RW_WHILE) {while}
          [0011, 0019] (0001, IDENTIFIER) {j}
          [0011, 0021] (0043,    OPR_GTE) {>=}
          [0011, 0024] (0001, IDENTIFIER) {gap}
          [0011, 0028] (0023,     RW_AND) {and}
          [0011, 0032] (0001, IDENTIFIER) {arr}
          [0011, 0035] (0007,     OP_BRA) {[}
          [0011, 0036] (0001, IDENTIFIER) {j}
          [0011, 0037] (0033,    OPR_SUB) {-}
          [0011, 0038] (0001, IDENTIFIER) {gap}
          [0011, 0041] (0008,     CL_BRA) {]}
          [0011, 0043] (0041,     OPR_GT) {>}
          [0011, 0045] (0001, IDENTIFIER) {temp}
          [0011, 0050] (0005,    OP_CBRA) {{}
  12                  array[j] = array[j-gap];
          [0012, 0017] (0001, IDENTIFIER) {array}
          [0012, 0022] (0007,     OP_BRA) {[}
          [0012, 0023] (0001, IDENTIFIER) {j}
          [0012, 0024] (0008,     CL_BRA) {]}
          [0012, 0026] (0031,    SB_ASGN) {=}
          [0012, 0028] (0001, IDENTIFIER) {array}
          [0012, 0033] (0007,     OP_BRA) {[}
          [0012, 0034] (0001, IDENTIFIER) {j}
          [0012, 0035] (0033,    OPR_SUB) {-}
          [0012, 0036] (0001, IDENTIFIER) {gap}
          [0012, 0039] (0008,     CL_BRA) {]}
          [0012, 0040] (0029,  SB_SCOLON) {;}
  13                  j = j - gap;
          [0013, 0017] (0001, IDENTIFIER) {j}
          [0013, 0019] (0031,    SB_ASGN) {=}
          [0013, 0021] (0001, IDENTIFIER) {j}
          [0013, 0023] (0033,    OPR_SUB) {-}
          [0013, 0025] (0001, IDENTIFIER) {gap}
          [0013, 0028] (0029,  SB_SCOLON) {;}
  14              }
          [0014, 0013] (0006,    CL_CBRA) {}}
  15              array[j] = temp;
          [0015, 0013] (0001, IDENTIFIER) {array}
          [0015, 0018] (0007,     OP_BRA) {[}
          [0015, 0019] (0001, IDENTIFIER) {j}
          [0015, 0020] (0008,     CL_BRA) {]}
          [0015, 0022] (0031,    SB_ASGN) {=}
          [0015, 0024] (0001, IDENTIFIER) {temp}
          [0015, 0028] (0029,  SB_SCOLON) {;}
  16          }
          [0016, 0009] (0006,    CL_CBRA) {}}
  17  
  18          gap = gap / 2;
          [0018, 0009] (0001, IDENTIFIER) {gap}
          [0018, 0013] (0031,    SB_ASGN) {=}
          [0018, 0015] (0001, IDENTIFIER) {gap}
          [0018, 0019] (0035,    OPR_DIV) {/}
          [0018, 0021] (0045,     CT_INT) {2}
          [0018, 0022] (0029,  SB_SCOLON) {;}
  19      }
          [0019, 0005] (0006,    CL_CBRA) {}}
  20  }
          [0020, 0001] (0006,    CL_CBRA) {}}
  21  
  22  function init(): int {
          [0022, 0001] (0009,      RW_FN) {function}
          [0022, 0010] (0002,    RW_INIT) {init}
          [0022, 0014] (0003,     OP_PAR) {(}
          [0022, 0015] (0004,     CL_PAR) {)}
          [0022, 0016] (0028,   SB_COLON) {:}
          [0022, 0018] (0010,     RW_INT) {int}
          [0022, 0022] (0005,    OP_CBRA) {{}
  23      var array: int[];
          [0023, 0005] (0022,     RW_VAR) {var}
          [0023, 0009] (0001, IDENTIFIER) {array}
          [0023, 0014] (0028,   SB_COLON) {:}
          [0023, 0016] (0010,     RW_INT) {int}
          [0023, 0019] (0007,     OP_BRA) {[}
          [0023, 0020] (0008,     CL_BRA) {]}
          [0023, 0021] (0029,  SB_SCOLON) {;}
  24      var n: int;
          [0024, 0005] (0022,     RW_VAR) {var}
          [0024, 0009] (0001, IDENTIFIER) {n}
          [0024, 0010] (0028,   SB_COLON) {:}
          [0024, 0012] (0010,     RW_INT) {int}
          [0024, 0015] (0029,  SB_SCOLON) {;}
  25      input(n);
          [0025, 0005] (0026,   RW_INPUT) {input}
          [0025, 0010] (0003,     OP_PAR) {(}
          [0025, 0011] (0001, IDENTIFIER) {n}
          [0025, 0012] (0004,     CL_PAR) {)}
          [0025, 0013] (0029,  SB_SCOLON) {;}
  26      var i: int;
          [0026, 0005] (0022,     RW_VAR) {var}
          [0026, 0009] (0001, IDENTIFIER) {i}
          [0026, 0010] (0028,   SB_COLON) {:}
          [0026, 0012] (0010,     RW_INT) {int}
          [0026, 0015] (0029,  SB_SCOLON) {;}
  27  
  28      for i = 0, 1, n {
          [0028, 0005] (0021,     RW_FOR) {for}
          [0028, 0009] (0001, IDENTIFIER) {i}
          [0028, 0011] (0031,    SB_ASGN) {=}
          [0028, 0013] (0045,     CT_INT) {0}
          [0028, 0014] (0030,   SB_COMMA) {,}
          [0028, 0016] (0045,     CT_INT) {1}
          [0028, 0017] (0030,   SB_COMMA) {,}
          [0028, 0019] (0001, IDENTIFIER) {n}
          [0028, 0021] (0005,    OP_CBRA) {{}
  29          input(array[i]);
          [0029, 0009] (0026,   RW_INPUT) {input}
          [0029, 0014] (0003,     OP_PAR) {(}
          [0029, 0015] (0001, IDENTIFIER) {array}
          [0029, 0020] (0007,     OP_BRA) {[}
          [0029, 0021] (0001, IDENTIFIER) {i}
          [0029, 0022] (0008,     CL_BRA) {]}
          [0029, 0023] (0004,     CL_PAR) {)}
          [0029, 0024] (0029,  SB_SCOLON) {;}
  30      }
          [0030, 0005] (0006,    CL_CBRA) {}}
  31  
  32      for i = 0, 1, n {
          [0032, 0005] (0021,     RW_FOR) {for}
          [0032, 0009] (0001, IDENTIFIER) {i}
          [0032, 0011] (0031,    SB_ASGN) {=}
          [0032, 0013] (0045,     CT_INT) {0}
          [0032, 0014] (0030,   SB_COMMA) {,}
          [0032, 0016] (0045,     CT_INT) {1}
          [0032, 0017] (0030,   SB_COMMA) {,}
          [0032, 0019] (0001, IDENTIFIER) {n}
          [0032, 0021] (0005,    OP_CBRA) {{}
  33          print("%d ", array[i]);
          [0033, 0009] (0027,   RW_PRINT) {print}
          [0033, 0014] (0003,     OP_PAR) {(}
          [0033, 0016] (0049,     CT_STR) {"%d"}
          [0033, 0020] (0030,   SB_COMMA) {,}
          [0033, 0022] (0001, IDENTIFIER) {array}
          [0033, 0027] (0007,     OP_BRA) {[}
          [0033, 0028] (0001, IDENTIFIER) {i}
          [0033, 0029] (0008,     CL_BRA) {]}
          [0033, 0030] (0004,     CL_PAR) {)}
          [0033, 0031] (0029,  SB_SCOLON) {;}
  34      }
          [0034, 0005] (0006,    CL_CBRA) {}}
  35  
  36      shellShort(array, n);
          [0036, 0005] (0001, IDENTIFIER) {shellShort}
          [0036, 0015] (0003,     OP_PAR) {(}
          [0036, 0016] (0001, IDENTIFIER) {array}
          [0036, 0021] (0030,   SB_COMMA) {,}
          [0036, 0023] (0001, IDENTIFIER) {n}
          [0036, 0024] (0004,     CL_PAR) {)}
          [0036, 0025] (0029,  SB_SCOLON) {;}
  37  
  38      for i = 0, 1, n {
          [0038, 0005] (0021,     RW_FOR) {for}
          [0038, 0009] (0001, IDENTIFIER) {i}
          [0038, 0011] (0031,    SB_ASGN) {=}
          [0038, 0013] (0045,     CT_INT) {0}
          [0038, 0014] (0030,   SB_COMMA) {,}
          [0038, 0016] (0045,     CT_INT) {1}
          [0038, 0017] (0030,   SB_COMMA) {,}
          [0038, 0019] (0001, IDENTIFIER) {n}
          [0038, 0021] (0005,    OP_CBRA) {{}
  39          print("%d ", array[i]);
          [0039, 0009] (0027,   RW_PRINT) {print}
          [0039, 0014] (0003,     OP_PAR) {(}
          [0039, 0016] (0049,     CT_STR) {"%d"}
          [0039, 0020] (0030,   SB_COMMA) {,}
          [0039, 0022] (0001, IDENTIFIER) {array}
          [0039, 0027] (0007,     OP_BRA) {[}
          [0039, 0028] (0001, IDENTIFIER) {i}
          [0039, 0029] (0008,     CL_BRA) {]}
          [0039, 0030] (0004,     CL_PAR) {)}
          [0039, 0031] (0029,  SB_SCOLON) {;}
  40      }
          [0040, 0005] (0006,    CL_CBRA) {}}
  41      return 0;
          [0041, 0005] (0017,     RW_RTN) {return}
          [0041, 0012] (0045,     CT_INT) {0}
          [0041, 0013] (0029,  SB_SCOLON) {;}
  42  }
          [0042, 0001] (0006,    CL_CBRA) {}}