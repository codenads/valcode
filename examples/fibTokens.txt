   1  function fibonacci(n: int): void {
          [0001, 0001] (0009,      RW_FN) {function}
          [0001, 0010] (0001, IDENTIFIER) {fibonacci}
          [0001, 0019] (0003,     OP_PAR) {(}
          [0001, 0020] (0001, IDENTIFIER) {n}
          [0001, 0021] (0028,   SB_COLON) {:}
          [0001, 0023] (0010,     RW_INT) {int}
          [0001, 0026] (0004,     CL_PAR) {)}
          [0001, 0027] (0028,   SB_COLON) {:}
          [0001, 0029] (0015,    RW_VOID) {void}
          [0001, 0034] (0005,    OP_CBRA) {{}
   2      var fibStorage: int[] = [0, 1];
          [0002, 0005] (0022,     RW_VAR) {var}
          [0002, 0009] (0001, IDENTIFIER) {fibStorage}
          [0002, 0019] (0028,   SB_COLON) {:}
          [0002, 0021] (0010,     RW_INT) {int}
          [0002, 0024] (0007,     OP_BRA) {[}
          [0002, 0025] (0008,     CL_BRA) {]}
          [0002, 0027] (0031,    SB_ASGN) {=}
          [0002, 0029] (0007,     OP_BRA) {[}
          [0002, 0030] (0045,     CT_INT) {0}
          [0002, 0031] (0030,   SB_COMMA) {,}
          [0002, 0033] (0045,     CT_INT) {1}
          [0002, 0034] (0008,     CL_BRA) {]}
          [0002, 0035] (0029,  SB_SCOLON) {;}
   3      var i: int;
          [0003, 0005] (0022,     RW_VAR) {var}
          [0003, 0009] (0001, IDENTIFIER) {i}
          [0003, 0010] (0028,   SB_COLON) {:}
          [0003, 0012] (0010,     RW_INT) {int}
          [0003, 0015] (0029,  SB_SCOLON) {;}
   4      for i = 2, 1, n + 1 {
          [0004, 0005] (0021,     RW_FOR) {for}
          [0004, 0009] (0001, IDENTIFIER) {i}
          [0004, 0011] (0031,    SB_ASGN) {=}
          [0004, 0013] (0045,     CT_INT) {2}
          [0004, 0014] (0030,   SB_COMMA) {,}
          [0004, 0016] (0045,     CT_INT) {1}
          [0004, 0017] (0030,   SB_COMMA) {,}
          [0004, 0019] (0001, IDENTIFIER) {n}
          [0004, 0021] (0032,    OPR_ADD) {+}
          [0004, 0023] (0045,     CT_INT) {1}
          [0004, 0025] (0005,    OP_CBRA) {{}
   5          fibStorage[i] = fibStorage[i-1] + fibStorage[i-2];
          [0005, 0009] (0001, IDENTIFIER) {fibStorage}
          [0005, 0019] (0007,     OP_BRA) {[}
          [0005, 0020] (0001, IDENTIFIER) {i}
          [0005, 0021] (0008,     CL_BRA) {]}
          [0005, 0023] (0031,    SB_ASGN) {=}
          [0005, 0025] (0001, IDENTIFIER) {fibStorage}
          [0005, 0035] (0007,     OP_BRA) {[}
          [0005, 0036] (0001, IDENTIFIER) {i}
          [0005, 0037] (0033,    OPR_SUB) {-}
          [0005, 0038] (0045,     CT_INT) {1}
          [0005, 0039] (0008,     CL_BRA) {]}
          [0005, 0041] (0032,    OPR_ADD) {+}
          [0005, 0043] (0001, IDENTIFIER) {fibStorage}
          [0005, 0053] (0007,     OP_BRA) {[}
          [0005, 0054] (0001, IDENTIFIER) {i}
          [0005, 0055] (0033,    OPR_SUB) {-}
          [0005, 0056] (0045,     CT_INT) {2}
          [0005, 0057] (0008,     CL_BRA) {]}
          [0005, 0058] (0029,  SB_SCOLON) {;}
   6      }
          [0006, 0005] (0006,    CL_CBRA) {}}
   7      i = 0;
          [0007, 0005] (0001, IDENTIFIER) {i}
          [0007, 0007] (0031,    SB_ASGN) {=}
          [0007, 0009] (0045,     CT_INT) {0}
          [0007, 0010] (0029,  SB_SCOLON) {;}
   8      while i < n + 1 {
          [0008, 0005] (0020,   RW_WHILE) {while}
          [0008, 0011] (0001, IDENTIFIER) {i}
          [0008, 0013] (0042,     OPR_LT) {<}
          [0008, 0015] (0001, IDENTIFIER) {n}
          [0008, 0017] (0032,    OPR_ADD) {+}
          [0008, 0019] (0045,     CT_INT) {1}
          [0008, 0021] (0005,    OP_CBRA) {{}
   9          print("%d", fibStorage[i])
          [0009, 0009] (0027,   RW_PRINT) {print}
          [0009, 0014] (0003,     OP_PAR) {(}
          [0009, 0015] (0049,     CT_STR) {"%d"}
          [0009, 0019] (0030,   SB_COMMA) {,}
          [0009, 0021] (0001, IDENTIFIER) {fibStorage}
          [0009, 0031] (0007,     OP_BRA) {[}
          [0009, 0032] (0001, IDENTIFIER) {i}
          [0009, 0033] (0008,     CL_BRA) {]}
          [0009, 0034] (0004,     CL_PAR) {)}
  10          if i < n {
          [0010, 0009] (0018,      RW_IF) {if}
          [0010, 0012] (0001, IDENTIFIER) {i}
          [0010, 0014] (0042,     OPR_LT) {<}
          [0010, 0016] (0001, IDENTIFIER) {n}
          [0010, 0018] (0005,    OP_CBRA) {{}
  11              print(", ")
          [0011, 0013] (0027,   RW_PRINT) {print}
          [0011, 0018] (0003,     OP_PAR) {(}
          [0011, 0020] (0049,     CT_STR) {","}
          [0011, 0023] (0004,     CL_PAR) {)}
  12          }
          [0012, 0009] (0006,    CL_CBRA) {}}
  13          i = i + 1;
          [0013, 0009] (0001, IDENTIFIER) {i}
          [0013, 0011] (0031,    SB_ASGN) {=}
          [0013, 0013] (0001, IDENTIFIER) {i}
          [0013, 0015] (0032,    OPR_ADD) {+}
          [0013, 0017] (0045,     CT_INT) {1}
          [0013, 0018] (0029,  SB_SCOLON) {;}
  14      }
          [0014, 0005] (0006,    CL_CBRA) {}}
  15  }
          [0015, 0001] (0006,    CL_CBRA) {}}
  16  
  17  function init(): int {
          [0017, 0001] (0009,      RW_FN) {function}
          [0017, 0010] (0002,    RW_INIT) {init}
          [0017, 0014] (0003,     OP_PAR) {(}
          [0017, 0015] (0004,     CL_PAR) {)}
          [0017, 0016] (0028,   SB_COLON) {:}
          [0017, 0018] (0010,     RW_INT) {int}
          [0017, 0022] (0005,    OP_CBRA) {{}
  18      var n: int;
          [0018, 0005] (0022,     RW_VAR) {var}
          [0018, 0009] (0001, IDENTIFIER) {n}
          [0018, 0010] (0028,   SB_COLON) {:}
          [0018, 0012] (0010,     RW_INT) {int}
          [0018, 0015] (0029,  SB_SCOLON) {;}
  19      input(n);
          [0019, 0005] (0026,   RW_INPUT) {input}
          [0019, 0010] (0003,     OP_PAR) {(}
          [0019, 0011] (0001, IDENTIFIER) {n}
          [0019, 0012] (0004,     CL_PAR) {)}
          [0019, 0013] (0029,  SB_SCOLON) {;}
  20      fibonacci(n);
          [0020, 0005] (0001, IDENTIFIER) {fibonacci}
          [0020, 0014] (0003,     OP_PAR) {(}
          [0020, 0015] (0001, IDENTIFIER) {n}
          [0020, 0016] (0004,     CL_PAR) {)}
          [0020, 0017] (0029,  SB_SCOLON) {;}
  21      return 0;
          [0021, 0005] (0017,     RW_RTN) {return}
          [0021, 0012] (0045,     CT_INT) {0}
          [0021, 0013] (0029,  SB_SCOLON) {;}
  22  }
          [0022, 0001] (0006,    CL_CBRA) {}}